<File version="2">
  <FileID>2137d606-a2f4-4c8b-b572-e1f0c27313cc</FileID>
  <Preview>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
AYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWU
UjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkA
KKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilV
QxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBS
SilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWU
AYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWU
UjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkA
KKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilV
QxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBS
SilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWU
AYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWU
UjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkA
KKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilV
QxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBS
SilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWU
AYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWU
UjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkA
KKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilV
QxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBS
SilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjWUAYBSSilVQxkAKKWUUjX0
Bw8AkyZOgLOzM65du0YppZTSR0R7e3tsWL/u4QeAogZg6dqtGDtmNBwdHWFpaUkppZTSR0RbW1us
Wb0KmiPHPdwAUFDXjl0H9PDqq6/i888/x6effkoppZTSR8TPPvsMb731FqbNXigCQPvDCwDxuTVI
zSlBeloqEhISKKWUUvqImZqSjLTsQqVmP7QAEJdTjbzSWjQ21KO+nlJKKaWPmrJGF1fUKTX7oQaA
7KIqVFdVorKSUkoppY+askbnl1QxAFBKKaXqJAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVq
KAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBK
KaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYy
AFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRS
qoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMA
pZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVq
KAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBK
KaVqKAMApZRSqoYyAFBKKaVqKAMApZRSqoYyAFBKKaVq6A8WAHKKq1FTXYWqKkoppZQ+asoa/dAD
QHxuDTLyy1FSXISiIkoppZQ+apaVlvwwASAluxiZGenIyMiglFJK6SNmXm4OCkpVR+0fWgDoPAVQ
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
h5zftyYjAAAAAElFTkSuQmCC</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formActiveDirectoryUnloc" children="Controls">
    <Property name="ClientSize">606, 379</Property>
    <Property name="MinimumSize">622, 319</Property>
    <Property name="Name">formActiveDirectoryUnloc</Property>
    <Property name="Text">Active Directory Unlocker</Property>
    <Event name="Load">formActiveDirectoryUnloc_Load</Event>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewOutput" children="Controls">
      <Property name="AllowUserToAddRows">False</Property>
      <Property name="AllowUserToDeleteRows">False</Property>
      <Property name="AlternatingRowsDefaultCellStyle">
        <InstanceDescriptor member="AAEAAAD/////AQAAAAAAAAAEAQAAAC9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgcAAAAETmFtZQxBc3NlbWJseU5hbWUJQ2xhc3NOYW1lCVNpZ25hdHVyZQpTaWduYXR1cmUyCk1lbWJlclR5cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEBAAMIDVN5c3RlbS5UeXBlW10GAgAAAAUuY3RvcgYDAAAAV1N5c3RlbS5XaW5kb3dzLkZvcm1zLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQYEAAAAKlN5c3RlbS5XaW5kb3dzLkZvcm1zLkRhdGFHcmlkVmlld0NlbGxTdHlsZQYFAAAADFZvaWQgLmN0b3IoKQYGAAAABy5jdG9yKCkBAAAACgs=">
          <Property name="BackColor">GradientActiveCaption</Property>
        </InstanceDescriptor>
      </Property>
      <Property name="ContextMenuStrip">
        <Reference name="contextmenustrip1" />
      </Property>
      <Property name="Dock">Fill</Property>
      <Property name="Location">0, 86</Property>
      <Property name="MinimumSize">557, 102</Property>
      <Property name="Name">datagridviewOutput</Property>
      <Property name="ReadOnly">True</Property>
      <Property name="RowHeadersVisible">False</Property>
      <Property name="RowHeadersWidthSizeMode">AutoSizeToDisplayedHeaders</Property>
      <Property name="SelectionMode">FullRowSelect</Property>
      <Property name="Size">606, 197</Property>
      <Property name="TabIndex">2</Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox1" children="Controls">
      <Property name="BackColor">ControlLightLight</Property>
      <Property name="Dock">Top</Property>
      <Property name="Font">Microsoft Sans Serif, 8.25pt, style=Bold</Property>
      <Property name="Location">0, 0</Property>
      <Property name="Name">groupbox1</Property>
      <Property name="Size">606, 86</Property>
      <Property name="TabIndex">5</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Search for lockedOut account(s)</Property>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSet" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="Location">359, 43</Property>
        <Property name="Name">buttonSet</Property>
        <Property name="Size">45, 23</Property>
        <Property name="TabIndex">1</Property>
        <Property name="Text">Set</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonSet_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelEnvusername" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="ForeColor">HotTrack</Property>
        <Property name="Location">360, 68</Property>
        <Property name="Name">labelEnvusername</Property>
        <Property name="Size">195, 20</Property>
        <Property name="TabIndex">4</Property>
        <Property name="Text">$env:userdomain\$env:username</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelCurrentCredential" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="ForeColor">ControlDarkDark</Property>
        <Property name="Location">267, 68</Property>
        <Property name="Name">labelCurrentCredential</Property>
        <Property name="Size">100, 20</Property>
        <Property name="TabIndex">14</Property>
        <Property name="Text">Current credential:</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelCredential" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="Location">302, 48</Property>
        <Property name="Name">labelCredential</Property>
        <Property name="Size">100, 20</Property>
        <Property name="TabIndex">12</Property>
        <Property name="Text">Credential:</Property>
      </Object>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxAccount" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="Location">126, 23</Property>
        <Property name="Name">textboxAccount</Property>
        <Property name="Size">120, 20</Property>
        <Property name="TabIndex">3</Property>
        <Property name="Text">Administrator</Property>
      </Object>
      <Object type="System.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="radiobuttonAllLockedOut" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="Location">13, 43</Property>
        <Property name="Name">radiobuttonAllLockedOut</Property>
        <Property name="Size">121, 24</Property>
        <Property name="TabIndex">11</Property>
        <Property name="Text">All locked out</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="CheckedChanged">radiobuttonAllLockedOut_CheckedChanged</Event>
      </Object>
      <Object type="System.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="radiobuttonSamAccountName" children="Controls">
        <Property name="Checked">True</Property>
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="Location">13, 20</Property>
        <Property name="Name">radiobuttonSamAccountName</Property>
        <Property name="Size">121, 24</Property>
        <Property name="TabIndex">10</Property>
        <Property name="TabStop">True</Property>
        <Property name="Text">SamAccountName</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="CheckedChanged">radiobuttonSamAccountName_CheckedChanged</Event>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonQuery" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt, style=Bold</Property>
        <Property name="Location">536, 23</Property>
        <Property name="Name">buttonQuery</Property>
        <Property name="Size">68, 43</Property>
        <Property name="TabIndex">8</Property>
        <Property name="Text">Query</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonQuery_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxDomain" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="Location">360, 23</Property>
        <Property name="Name">textboxDomain</Property>
        <Property name="Size">126, 20</Property>
        <Property name="TabIndex">5</Property>
        <Property name="Text">$env:userdomain</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelDomainServer" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 8.25pt</Property>
        <Property name="Location">277, 26</Property>
        <Property name="Name">labelDomainServer</Property>
        <Property name="Size">100, 20</Property>
        <Property name="TabIndex">6</Property>
        <Property name="Text">Domain/Server:</Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.RichTextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="richtextboxStatus" children="Controls">
      <Property name="Dock">Bottom</Property>
      <Property name="Location">0, 283</Property>
      <Property name="MaximumSize">0, 74</Property>
      <Property name="MinimumSize">606, 74</Property>
      <Property name="Name">richtextboxStatus</Property>
      <Property name="Size">606, 74</Property>
      <Property name="TabIndex">6</Property>
      <Property name="Text">
      </Property>
    </Object>
    <Object type="System.Windows.Forms.StatusStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="statusstrip1" children="Controls">
      <Property name="Font">Segoe UI, 9pt, style=Bold</Property>
      <Property name="Items">
        <Item type="System.Windows.Forms.ToolStripStatusLabel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="toolstripstatuslabelLazyWinAdmin" />
        </Item>
      </Property>
      <Property name="Location">0, 357</Property>
      <Property name="Name">statusstrip1</Property>
      <Property name="Size">606, 22</Property>
      <Property name="TabIndex">8</Property>
      <Property name="Text">statusstrip1</Property>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ContextMenuStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="contextmenustrip1" children="Controls">
    <Property name="Items">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="unlockToolStripMenuItem" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="informationToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">contextmenustrip1</Property>
    <Property name="RenderMode">Professional</Property>
    <Property name="ShowImageMargin">False</Property>
    <Property name="Size">113, 48</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="unlockToolStripMenuItem">
    <Property name="Name">unlockToolStripMenuItem</Property>
    <Property name="Size">112, 22</Property>
    <Property name="Text">Unlock</Property>
    <Event name="Click">unlockToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="informationToolStripMenuItem">
    <Property name="Name">informationToolStripMenuItem</Property>
    <Property name="Size">112, 22</Property>
    <Property name="Text">Information</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripStatusLabel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="toolstripstatuslabelLazyWinAdmin">
    <Property name="IsLink">True</Property>
    <Property name="Name">toolstripstatuslabelLazyWinAdmin</Property>
    <Property name="Size">116, 17</Property>
    <Property name="Text">LazyWinAdmin.com</Property>
    <Event name="Click">toolstripstatuslabelLazyWinAdmin_Click</Event>
  </Object>
  <Code><![CDATA[
$formActiveDirectoryUnloc_Load= {
	#TODO: Initialize Form Controls here
	if (-not (Get-Module -Name ActiveDirectory))
	{
		Import-Module -Name ActiveDirectory
	}
}

#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The ComboBox control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the ComboBox's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{	
			$array.Add($Item)	
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	
		.NOTES
			SAPIEN Technologies, Inc.
			http://www.sapien.com/
	
			VERSION HISTORY
			1.0 ????/??/?? From Sapien.com Version
			2.0 2014/12/03 Francois-Xavier Cat - In the rows workk, I added a 
				small piece of code to handle the $null value with [DBNull]::Value
				
	#>
	[CmdletBinding()]
	[OutputType([System.Data.DataTable])]
	param (
		[ValidateNotNull()]
		$InputObject,
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties
	)
	
	if ($Table -eq $null)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($InputObject -eq $null) { return } #Empty Data
			
			$object = $null
			
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($item -ne $null)
				{
					$object = $item
					break
				}
			}
			
			if ($object -eq $null) { return } #All null then empty
			
			#COLUMN
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($prop.Value -ne $null)
					{
						try { $type = $prop.Value.GetType() }
						catch { Write-Verbose -Message "Can't find type of $prop" }
					}
					
					if ($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						Write-Verbose -Message "Creating Column: $($Prop.name) (Type: $type)"
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						#if ($prop.name -eq "" -or $prop.name -eq $null) { [void]$table.Columns.Add([DBNull]::Value) }
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @(, $Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		#Rows Work
		foreach ($item in $InputObject)
		{
			# Create a new row object
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					#Find the appropriate column to put the value
					if ($table.Columns.Contains($prop.Name))
					{
						if ($prop.value -eq $null) { $prop.value = [DBNull]::Value }
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(, $Table)
}#ConvertTo-DataTable

function Set-RichTextBox
{
<#
	.SYNOPSIS
		The Set-RichTextBox function allow you to manage the richtextbox control
	
	.DESCRIPTION
		The Set-RichTextBox function allow you to manage the richtextbox control
	
	.PARAMETER RichTextBox
		Specifies the RichTextBox Control to use
	
	.PARAMETER ScrollToCaret
		Specifies that the RichTextBox will scroll to the end.
	
	.EXAMPLE
		PS C:\> Set-Richtextbox -PipelineVariable $value1 -RichTextBox $value2
	
	.NOTES
		Author: Francois-Xavier Cat
		Twitter:@LazyWinAdm
		WWW: 	lazywinadmin.com
#>
	
	
	[Cmdletbinding()]
	PARAM (
		[System.Windows.Forms.RichTextBox]$RichTextBox,
		[Switch]$ScrollToCaret
	)
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		$RichTextBox.ScrollToCaret()
	}
}#Set-RichTextBox

function Append-Richtextbox
{
	<#
		.SYNOPSIS
			This function Append text to a RichTextBox
		.DESCRIPTION
			This function Append text to a RichTextBox
		.PARAMETER Richtextbox
			Specify the RichTextBox Control to use
		.PARAMETER Message
			Specify the Message to show
		.PARAMETER MessageColor
			Specify the Color to use for the Message. Default is DarkGreen.
		.PARAMETER Source
			Specify the Source type of the Message
		.PARAMETER SourceColor
			Specify the Source type color to use. Default is Gray.
		.PARAMETER ItemName
			Specify a name that will help the user to identify the item
		.PARAMETER ItemColor
			Specify a color for the ItemName. Default is Blue.
		.EXAMPLE
			Append-Richtextbox -RichTextBox $RichTextBox1 -Message "Hello World"
		.EXAMPLE
			Append-Richtextbox -RichTextBox $RichTextBox1 -Message "Some info" -Source "Get-TSSession" -ComputerName "RemoteServe01"
		.NOTES
			Francois-Xavier Cat
			@lazywinadm
			www.lazywinadmin.com
	
			VERSION HISTORY
				1.0 2014/04/16 Initial Version
				2.0 2015/02/13 Small update of parameter/Comment Based help
	#>
	[CmdletBinding()]
	PARAM (
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.Richtextbox]$RichTextBox,
		
		[Parameter(Mandatory = $true)]
		[string]$Message,
		[string]$MessageColor = "DarkGreen",
		[string]$DateTimeColor = "Black",
		[string]$Source,
		[string]$SourceColor = "Gray",
		
		[Alias("ComputerName", "UserName")]
		[string]$ItemName,
		
		[Alias("ComputerNameColor", "UserNameColor")]
		[String]$ItemColor = "Blue")
	
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
		
		# Get current date/time. Example: 2015-12-20 18:25:03
		$SortableTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
	}
	PROCESS
	{
		TRY
		{
			# Add the Date/Time
			$RichTextBox.SelectionColor = $DateTimeColor
			$RichTextBox.AppendText("[$SortableTime] ")
			
			
			IF ($PSBoundParameters['ItemName'])
			{
				# Add ComputerName
				$RichTextBox.SelectionColor = $ItemColor
				$RichTextBox.AppendText(("$Item ").ToUpper())
			}
			
			IF ($PSBoundParameters['Source'])
			{
				# Add Source
				$RichTextBox.SelectionColor = $SourceColor
				$RichTextBox.AppendText("$Source ")
			}
			
			# Add Message with a return character
			$RichTextBox.SelectionColor = $MessageColor
			$RichTextBox.AppendText("$Message`r")
			Write-Verbose -Message "$SortableTime $Message"
		}
		CATCH
		{
			Write-Error -Message "PROCESS - Error while writing inside the RichTextBox"
			Write-Error -Message "PROCESS - $($Error[0].Exception.message)"
		}
	}
	END
	{
		# Refresh RichTextBox
		$RichTextBox.Refresh()
		
		# Scroll to the end of the RichTextBox
		$RichTextBox.ScrollToCaret()
	}
}#Append-Richtextbox

function Disable-Button
{
<#
.SYNOPSIS
	This function will disable a button control
.EXAMPLE
	Disable-Button -Button $Button
.NOTES
	Francois-Xavier Cat
	@lazywinadm
	www.lazywinadmin.com
#>
	[CmdletBinding()]
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.Button[]]$Button
	)
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		foreach ($ButtonObject in $Button)
		{
			$ButtonObject.Enabled = $false
		}
		
	}
}#Disable-Button

function Enable-Button
{
<#
.SYNOPSIS
	This function will enable a button control
.EXAMPLE
	Enable-Button -Button $Button
.NOTES
	Francois-Xavier Cat
	@lazywinadm
	www.lazywinadmin.com
#>
	[CmdletBinding()]
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.Button[]]$Button
	)
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		foreach ($ButtonObject in $Button)
		{
			$ButtonObject.Enabled = $true
		}
	}
}#Enable-Button

function Disable-TextBox
{
<#
.SYNOPSIS
	This function will disable a TextBox control
.EXAMPLE
	Disable-TextBox -TextBox $TextBox
.NOTES
	Francois-Xavier Cat
	@lazywinadm
	www.lazywinadmin.com
#>
	[CmdletBinding()]
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.TextBox]$TextBox
	)
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		$TextBox.Enabled = $false
	}
}#Disable-TextBox

function Enable-TextBox
{
<#
.SYNOPSIS
	This function will enable a TextBox control
.EXAMPLE
	Enable-TextBox -TextBox $TextBox
.NOTES
	Francois-Xavier Cat
	@lazywinadm
	www.lazywinadmin.com
#>
	[CmdletBinding()]
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.TextBox]$TextBox
	)
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		$TextBox.Enabled = $true
	}
}#Enable-TextBox

function New-MessageBox
{
<#
	.SYNOPSIS
		The New-MessageBox functio will show a message box to the user
	
	.DESCRIPTION
		The New-MessageBox functio will show a message box to the user
	
	.PARAMETER Message
		Specifies the message to show
	
	.PARAMETER Title
		Specifies the title of the message box
	
	.PARAMETER Buttons
		Specifies which button to add. Just press tab to see the choices
	
	.PARAMETER Icon
		Specifies the icon to show. Just press tab to see the choices
	
	.EXAMPLE
		PS C:\> New-MessageBox -Message "Hello World" -Title "First Message" -Buttons "RetryCancel" -Icon "Asterix"
	
	.NOTES
		Author: Francois-Xavier Cat
		Twitter:@LazyWinAdm
		WWW: 	lazywinadmin.com
#>
	[CmdletBinding()]
	PARAM (
		
		[String]$Message,
		[String]$Title,
		[System.Windows.Forms.MessageBoxButtons]$Buttons = "OK",
		[System.Windows.Forms.MessageBoxIcon]$Icon = "None"
	)
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		[System.Windows.Forms.MessageBox]::Show($Message, $Title, $Buttons, $Icon)
	}
}#New-MessageBox
#endregion

$buttonQuery_Click = {
	TRY
	{
		# Create splatting hashtable
		$Splatting = @{ }
		
		# Properties to report
		$PropertiesToAdd = "lockedout"
		$PropertiesToShow = "samaccountname", "LockedOut", "Enabled","DistinguishedName"
		
		# Credentials and different domain/server
		if ($global:Cred)
		{
			$Splatting.Credential = $global:Cred
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Credential" -Message "Alternative Credential specified"
		}

		if (($textboxDomain.Text -ne "") -and (-not($textboxDomain.Text -eq $env:USERDOMAIN)))
		{
			$Splatting.Server = $textboxDomain.Text
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Domain" -Message "Different Domain or server specified"
		}
		
		# User Search
		if ($radiobuttonSamAccountName.Checked)
		{
			
			$Account = $textboxAccount.Text
			$Splatting.LdapFilter = "(samaccountname=*$Account*)"
			
			# Look for user
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Get-ADUser" -Message "Query for $Account"
			$users = get-aduser @Splatting -erroraction stop -errorvar ErrorGetAdUser -prop $PropertiesToAdd | Select-Object -Property $PropertiesToShow
			
		}
		
		# All LockedOut Accounts
		if ($radiobuttonAllLockedOut.Checked)
		{
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Search-ADAccount" -Message "Query all lockedout account(s)"
			$users = Search-ADAccount @Splatting -LockedOut -erroraction stop -errorvar ErrorSearchADAccount -prop $PropertiesToAdd | Select-Object -Property $PropertiesToShow
		}
		
		if ($users)
		{
			# Convert result to Datatable object
			$usersDT = ConvertTo-DataTable -InputObject $users
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "LockedOut User(s)" -Message "Some user(s) were found."
			# Show output to DataGridView
			Load-DataGridView -DataGridView $datagridviewOutput -Item $usersDT
		}
		if (-not $users)
		{
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Get-ADUser" -Message "No user found" -MessageColor orange
		}
		
		
	}
	CATCH
	{
		Write-Warning -Message "Something wrong happened"
		if ($ErrorGetAdUser)
		{
			Write-Warning -Message "Issue retrieving a user"
			Write-Warning -Message $Error[0].Exception.Message
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Get-ADUser" -Message $Error[0].Exception.Message -MessageColor red
			
		}
		if ($ErrorSearchADAccount)
		{
			Write-Warning -Message "Issue searching active directory"
			Write-Warning -Message $Error[0].Exception.Message
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Search-ADAccount" -Message $Error[0].Exception.Message -MessageColor red
		}
		$richtextboxStatus.AppendText($($Error[0].Exception.Message))
	}
}

$buttonSet_Click = {
	# Ask the user for Credentials
	$global:Cred = Get-Credential -Credential "$($env:userdomain)/$($env:username)"
	Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Credential" -Message "UserName: $($Cred.UserName)"
	$labelcredentialusername.Text =	$($Cred.UserName)
}

$unlockToolStripMenuItem_Click = {
	TRY
	{
		# Create splatting hashtable
		$UnlockSplatting = @{ }
		
		# Credentials and different domain/server
		if ($global:Cred)
		{
			$UnlockSplatting.Credential = $global:Cred
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Credential" -Message "Alternative Credential specified"
		}
		
		if (($textboxDomain.Text -ne "") -and (-not ($textboxDomain.Text -eq $env:USERDOMAIN)))
		{
			$UnlockSplatting.Server = $textboxDomain.Text
			Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Domain" -Message "Different Domain or server specified"
		}
		
		IF ($datagridviewOutput.SelectedRows.Count -eq 1)
		{
			$SamAccountName = $($datagridviewOutput.currentrow.Cells[0].value)
			
			if ((New-MessageBox -Buttons 'YesNo' -Icon 'Warning' -Title "Unlock $SamAccountName" -Message "Are you sure you want to unlock this user ?") -eq "Yes")
			{
				#Unlocking the selected account
				Unlock-ADAccount -identity $SamAccountName @UnlockSplatting -confirm
				Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Unlock-ADAccount" -Message "Unlock Account $SamAccountName"
			}			
		}
		
		IF ($datagridviewOutput.SelectedRows.Count -gt 1)
		{
			IF ((New-MessageBox -Buttons 'YesNo' -Icon 'Warning' -Title "Unlock - Multiple accounts selected" -Message "Multiple account selected! Do you want to continue ?") -eq "Yes")
			{
				FOREACH ($Row in $datagridviewOutput.SelectedRows)
				{
					$SamAccountName = $Row.Cells[0].Value
					
					#Unlocking the selected account
					Unlock-ADAccount -identity $SamAccountName @Splatting -confirm
					Append-Richtextbox -RichTextBox $richtextboxStatus -UserName $SamAccountName -Source "Unlock-ADAccount" -Message "Unlock Account $SamAccountName"
					
				}
			}
		}
		IF ($datagridviewOutput.SelectedRows.Count -eq 0)
		{
			New-MessageBox -Buttons 'OK' -Icon 'Information' -Title "Unlock - No account specified"	-Message "No Account selected"
		}
	}
	CATCH
	{ }
	
}

$radiobuttonAllLockedOut_CheckedChanged={
	Disable-TextBox -TextBox $textboxAccount
}

$radiobuttonSamAccountName_CheckedChanged={
	Enable-TextBox -TextBox $textboxAccount
}

$toolstripstatuslabelLazyWinAdmin_Click={
	Start-Process -FilePath "http://www.lazywinadmin.com"
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</Assembly>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>