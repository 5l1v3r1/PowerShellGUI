<File version="2">
  <FileID>f077ab29-3478-4ca6-943e-b46629525923</FileID>
  <Preview>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
DACEEEKIDmEAIIQQQnQIAwAhhBCiQxgACCGEEB3CAEAIIYToEAYAQgghRIcwABBCCCE6hAGAEEII
0SEMAIQQQogOYQAghBBCdAgDACGEEKJDGAAIIYQQHcIAQAghhOgQBgBCCCFEhzAAEEIIITqEAYAQ
QgjRIQwAhBBCiA5hACCEEEJ0CAMAIYQQokMYAAghhBAdwgBACCGE6BAGAEIIIUSHMAAQQgghOoQB
gBBCCNEhDACEEEKIDmEAIIQQQnQIAwAhhBCiQxgACCGEEB3CAEAIIYToEAYAQgghRIcwABBCCCE6
hAGAEEII0SEMAIQQQogOYQAghBBCdAgDACGEEKJDGAAIIYQQHcIAQAghhOgQBgBCCCFEhzAAEEII
ITqEAYAQQgjRIQwAhBBCiA5hACCEEEJ0CAMAIYQQokMYAAghhBAdwgBACCGE6BAGAEIIIUSHMAAQ
QgghOoQBgBBCCNEhDACEEEKIDmEAIIQQQnQIAwAhhBCiQxgACCGEEB3CAEAIIYToEAYAQgghRIcw
ABBCCCE6hAGAEEII0SEMAIQQQogOYQAghBBCdAgDACGEEKJDGAAIIYQQHcIAQAghhOgQBgBCCCFE
hzAAEEIIITqEAYAQQgjRIQwAhBBCiA5hACCEEEJ0CAMAIYQQokMYAAghhBAdwgBACCGE6BAGAEII
IUSHMAAQQgghOoQBgBBCCNEhDACEEEKIDmEAIIQQQnQIAwAhhBCiQxgACCGEEB3CAEAIIYToEAYA
QgghRIcwABBCCCE6hAGAEEII0SEMAIQQQogOYQAghBBCdAgDACGEEKJDGAAIIYQQHcIAQAghhOgQ
BgBCCCFEhzAAEEIIITqEAYAQQgjRIQwAhBBCiA5hACCEEEJ0CAMAIYQQokMYAAghhBAdwgBACCGE
6BAGAEIIIUSHMAAQQgghOoQBgBBCCNEhDACEEEKIDmEAIIQQQnQIAwAhhBCiQxgACCGEEB3CAEAI
IYToEAYAQgghRIcwABBCCCE6hAGAEEII0SEMAIQQQogOYQAghBBCdAgDACGEEKJDGAAIIYQQHcIA
QAghhOgQBgBCCCFEhzAAEEIIITqEAYAQQgjRIQwAhBBCiA5hACCEEEJ0CAMAIYQQokMYAAghhBAd
wgBACCGE6BAGAEIIIUSHMAAQQgghOoQBgBBCCNEhDACEEEKIDmEAIIQQQnQIAwAhhBCiQxgACCGE
EB3CAEAIIYToEAYAQgghRIcwABBCCCE6hAGAEEII0SEMAIQQQogOYQAghBBCdAgDACGEEKJDGAAI
IYQQHcIAQAghhOgQBgBCCCFEhzAAEEIIITqEAYAQQgjRIQwAhBBCiA5hACCEEEJ0CAMAIYQQokMY
AAghhBAdwgBACCGE6BAGAEIIIUSHMAAQQgghOoQBgBBCCNEhDACEEEKIDmEAIIQQQnQIAwAhhBCi
QxgACCGEEB3CAEAIIYToEAYAQgghRIcwABBCCCE6hAGAEEII0SEMAIQQQogOYQAghBBCdAgDACGE
EKJDrnEASLywWUIIIYRcT65ZAIhOzsPxE0EIj4illFJK6XU0TDxy1B8xqYVXNwAUN7oQmZiFXbt2
Y89eH+zZQymllNJrrtTg3Xv2YevW7cjIyEJlo01qtvWSmv0LB4BWREkAWL1qBaZM+Rrjx4/XnEAp
pZTSa+bYsWO1+hsUFIi2Njeabe3IqjRfUrN/8QAQk5yDuXNmY/LkyfD398fJkydx4sQJSimllF4j
jx07pt0WFxejs6MDdUYXsq9FAJg5cwZWrlyJzs5OdMiG29raKKWUUnqNraurQ6vTce0CwKxZM7Fs
2TJYrVZYLBaYTCZKKaWUXmNramrQ6nIyAFBKKaV6kgGAUkop1aEMAJRSSqkOZQCglFJKdSgDAKWU
UqpDGQAopZRSHcoAQCmllOpQBgBKKaVUhzIAUEoppTqUAYBSSinVoQwAlFJKqQ5lAKCUUkp1KAMA
pZRSqkMZACillFIdygBAKaWU6lAGAEoppVSHMgBQSimlOpQBgFJKKdWhDACUUkqpDmUAoJRSSnUo
AwCllFKqQxkAKKWUUh3KAEAppZTqUAYASimlVIcyAFBKKaU6lAGAUkop1aEMAJRSSqkOZQCglFJK
dSgDAKWUUqpDGQAopZRSHcoAQCmllOpQBgBKKaVUhzIAUEoppTqUAYBSSinVoQwAlFJKqQ5lAKCU
Ukp1KAMApZRSqkMZACillFIdygBAKaWU6lAGAEoppVSHMgBQSimlOpQBgFJKKdWhDACUUkqpDmUA
oJRSSnUoAwCllFKqQxkAKKWUUh3KAEAppZTqUAYASimlVIcyAFBKKaU6lAGAUkop1aEMAJRSSqkO
ZQCglFJKdSgDAKWUUqpDGQAopZRSHcoAQCmllOpQBgBKKaVUhzIAUEoppTqUAYBSSinVoQwAlFJK
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
Rb2cMGSqmbMJBfL8oiEO5O5zYm60FbN3yMy+SD1nuPhVukqrEfNPWZC8x41WsxnHSg3424etWl9X
rHZj3SgXzsx1Qp0G6HPEgi2fSBtGK9SHAtGVJix4z4n6BNUfE0qk3cWj7IhZ44RkNWxeb4XfaCfU
GQQnZHxWfyD9rLZp50SkSvGd/6ETJWcd2gl8S7604fxSNQ4WWdeADYEW6YOnHx+91Y7WDHVUwojz
DUa8Ju2ox/uLGT5qHTNaZJ2dO6zYNVSWs1m1cwDO55mxWMbDmPXteCwc5EDSTlnGbYHRzABAKaXX
Q3XYX33HXx3u7/rMX33Wr+j6zF8VfkVHR4e23PUJABYTGhtNiE+wIEoKaUSEFNtwjzFRViTEy228
BRGRVkTKczGyTGycFXFihPw/Ugy/sE6MLJOWZEVpvgV/XmHDO2Nl+/4uxCdbEC/teLQgTt3K+l33
u7ah2u16TBkbK9uK8Tymthcr2+paL049L8/FyTLRYoyo2vGs61lGa0OtJ8tpzyVaECn7pPVV2oqT
x7va774trf0f2N7ly3dt49tlPfdVG9rz3dZLlD7ExVkujpka73it7zIO3foXJar21GOXj4W6/0P9
Ky83a3+r4PIXJaWU0qurKu7qc331uX9TU5N2X33mrw71d33er0KB+v6/0mAwXFjvOnwE0NZmRHq6
BQ8+0I577+24xLvu7sDtd3Tg7js99+8R775HHr+rA3fK4/fK813L/uEP8pjc/s9fd+Dv/0sn/vF/
d+I3v+3Enbd34A5ZVnn7hf/fLeurtrseU94jj92tHpNtacuJajt3yfbUcnfK43dL+13Pq3ZVX+5U
66nn5FY9p9a7fFtqGfX/u+T5e2Ud1V+1LW1f1Da7bUvtr7qv9q/79tRj2vYuLK/W1/qm1lXbV//v
vq66r7bbbb2L7cjjXeOmxvTiPsl6Xf1Tj6t+d63znf6pbXZfV9S2I8vt3GmXVMkjAJRSei1VxV3N
/NUFftTn++rEPzXDVyf7qc/81WF/NfNXYcDHxwf79u3TzgfwXBHwOgQAdQSgqcmkhYDU1J9vhqwf
mW3BI1868M+/kiI0tB2luTakZpi9Lk+vnlVV8vO98DVOSiml18auAKA+21cX+VHf81ekpaVp99Xj
6ut/KgDs2bNHCwBqPXWi4HX5CEBdrlcVC7fbqB0N+PeorsaXU21CWqIFhgoLOto9RxjotdVm8/xc
u78wKaWUXn1VCOg63K/O+Feq/6vHVDhQRwTUYX/1EYFaXt1Xj1+XAPBLqq52py4d3N7huRa++rO5
3pajlFJKb1XVSYAulxMOh11qreev/jkvnO1vtaprwJi1bweomb92+F/WuWYfAVRKAND+VK5skFJK
KaW/sDKjV7N6deu5r8JBt/uiuu95zHMk/qoHAHW/sNaCcgkBamOUUkopvc5KTS6s8dToS2r2LxkA
tAZFlTIopZRSemPotV7L479oAKCUUkrpjS8DAKWUUqpDGQAopZRSHfqzA0C5BADtcwVKKaWU3nTm
VFpQ9ZMCQN9+horqRhhc0JIDpZRSSm9CDe0wuwE1qb+iAPDBBx+1xsSnIL+wQksNlFJKKb05VcU/
PCIW7777btOFMv/9vPXWW5m9e/euUGmBUkoppTe377//fsWbb74Zd6HME0IIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQsgtwq9+9f8Dh6EANoB0xKIAAAAASUVO
RK5CYII=</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formADUnlocker" children="Controls">
    <Property name="ClientSize">451, 332</Property>
    <Property name="MinimumSize">467, 371</Property>
    <Property name="Name">formADUnlocker</Property>
    <Property name="Text">AD Unlocker</Property>
    <Event name="Load">formADUnlocker_Load</Event>
    <Object type="System.Windows.Forms.ListView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="listview1" children="Controls">
      <Property name="Dock">Fill</Property>
      <Property name="Location">0, 59</Property>
      <Property name="Name">listview1</Property>
      <Property name="Size">451, 170</Property>
      <Property name="TabIndex">7</Property>
      <Property name="UseCompatibleStateImageBehavior">False</Property>
    </Object>
    <Object type="System.Windows.Forms.RichTextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="richtextbox1" children="Controls">
      <Property name="Dock">Bottom</Property>
      <Property name="Location">0, 229</Property>
      <Property name="Name">richtextbox1</Property>
      <Property name="Size">451, 81</Property>
      <Property name="TabIndex">3</Property>
      <Property name="Text">
      </Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox1" children="Controls">
      <Property name="Dock">Top</Property>
      <Property name="Location">0, 0</Property>
      <Property name="Name">groupbox1</Property>
      <Property name="Size">451, 59</Property>
      <Property name="TabIndex">6</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Enter the Username</Property>
      <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textboxComputerName" children="Controls">
        <Property name="Font">Microsoft Sans Serif, 12pt, style=Bold</Property>
        <Property name="Location">6, 17</Property>
        <Property name="Name">textboxComputerName</Property>
        <Property name="Size">276, 26</Property>
        <Property name="TabIndex">0</Property>
        <Event name="TextChanged">textboxComputerName_TextChanged</Event>
        <Event name="VisibleChanged">textboxComputerName_VisibleChanged</Event>
        <Event name="Enter">textboxComputerName_Enter</Event>
        <Event name="Leave">textboxComputerName_Leave</Event>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonCheck" children="Controls">
        <Property name="Enabled">False</Property>
        <Property name="Location">321, 19</Property>
        <Property name="Name">buttonCheck</Property>
        <Property name="Size">56, 23</Property>
        <Property name="TabIndex">1</Property>
        <Property name="Text">Check</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonCheck_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonUnlock" children="Controls">
        <Property name="Enabled">False</Property>
        <Property name="Location">383, 19</Property>
        <Property name="Name">buttonUnlock</Property>
        <Property name="Size">56, 23</Property>
        <Property name="TabIndex">2</Property>
        <Property name="Text">Unlock</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.StatusStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="statusstrip1" children="Controls">
      <Property name="Items">
        <Item type="System.Windows.Forms.ToolStripStatusLabel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="toolstripstatuslabelLazyWinAdminLink" />
        </Item>
      </Property>
      <Property name="Location">0, 310</Property>
      <Property name="Name">statusstrip1</Property>
      <Property name="Size">451, 22</Property>
      <Property name="TabIndex">5</Property>
      <Property name="Text">statusstrip1</Property>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ToolStripStatusLabel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="toolstripstatuslabelLazyWinAdminLink">
    <Property name="IsLink">True</Property>
    <Property name="Name">toolstripstatuslabelLazyWinAdminLink</Property>
    <Property name="Size">114, 17</Property>
    <Property name="Text">LazyWinAdmin.com</Property>
    <Property name="TextDirection">Horizontal</Property>
    <Event name="Click">toolstripstatuslabelLazyWinAdminLink_Click</Event>
  </Object>
  <Code><![CDATA[

function OnApplicationLoad {
	#Note: This function is not called in Projects
	#Note: This function runs before the form is created
	#Note: To get the script directory in the Packager use: Split-Path $hostinvocation.MyCommand.path
	#Note: To get the console output in the Packager (Windows Mode) use: $ConsoleOutput (Type: System.Collections.ArrayList)
	#Important: Form controls cannot be accessed in this function
	#TODO: Add modules and custom code to validate the application load
	
	return $true #return true for success or false for failure
}


function OnApplicationExit {
	#Note: This function is not called in Projects
	#Note: This function runs after the form is closed
	#TODO: Add custom code to clean up and unload modules when the application exits
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

$formADUnlocker_Load = {
	
	# Set text
	$textboxComputerName.Tag = 'Please enter an username here'
	$textBoxComputerName.ForeColor = 'LightGray'
	$textBoxComputerName.Text = $textboxComputerName.Tag
}

#region Control Helper Functions
function Sort-ListViewColumn 
{
	<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.

	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.

	.PARAMETER ListView
		The ListView control to sort.

	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
		
	.PARAMETER  SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Sort-ListViewColumn -ListView $listview1 -ColumnIndex 0
#>
	param(	
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListView]$ListView,
			[Parameter(Mandatory=$true)]
			[int]$ColumnIndex,
			[System.Windows.Forms.SortOrder]$SortOrder = 'None')
	
	if(($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
		try{
		$local:type = [ListViewItemComparer]
	}
	catch{
	Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@  | Out-Null
	}
	#endregion
	
	if($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort()#Sort the items
	}
	else
	{
		if($Sort -eq [System.Windows.Forms.SortOrder]::None)
		{
			$Sort = [System.Windows.Forms.SortOrder]::Ascending	
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder) 
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}

function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param( 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[System.Windows.Forms.ListView]$ListView,
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	$Items,
	[int]$ImageIndex = -1,
	[string[]]$SubItems,
	[System.Windows.Forms.ListViewGroup]$Group,
	[switch]$Clear)
	
	if($Clear)
	{
		$ListView.Items.Clear();
	}
	
	if($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{		
			$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if($SubItems -ne $null)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($Group -ne $null)
			{
				$listitem.Group = $Group
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if($SubItems -ne $null)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if($Group -ne $null)
		{
			$listitem.Group = $Group
		}
	}
}

function Append-Richtextbox
{
	<#
		.SYNOPSIS
			This function Append text to a RichTextBox
		.DESCRIPTION
			This function Append text to a RichTextBox
		.PARAMETER Richtextbox
			Specify the RichTextBox Control to use
		.PARAMETER Message
			Specify the Message to show
		.PARAMETER MessageColor
			Specify the Color to use for the Message
		.PARAMETER Source
			Specify the Source type of the Message
		.PARAMETER SourceColor
			Specify the Source type color to use
		.PARAMETER ComputerName
			Specify the ComputerName on which the message apply (nothing is done on a remote computer, it's just an informational parameter)
		.PARAMETER ComputerNameColor
			Specify the ComputerName color to use
		.EXAMPLE
			Append-Richtextbox -RichTextBox $RichTextBox1 -Message "Hello World"
		.EXAMPLE
			Append-Richtextbox -RichTextBox $RichTextBox1 -Message "Some info" -Source "Get-TSSession" -ComputerName "RemoteServe01"
		.NOTES
			Francois-Xavier Cat
			@lazywinadm
			www.lazywinadmin.com
	
			VERSION HISTORY
				1.0 2014/04/16 Initial Version
	#>
	[CmdletBinding()]
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory)]
		[System.Windows.Forms.Richtextbox]$RichTextBox,
		[Parameter(Mandatory)]
		[string]$Message,
		[string]$MessageColor = "DarkGreen",
		[string]$DateTimeColor = "Black",
		[string]$Source,
		[string]$SourceColor = "Gray",
		[string]$ComputerName,
		[String]$ComputerNameColor = "Blue")
	
	BEGIN
	{
		# Get current date/time
		$SortableTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
	}
	PROCESS
	{
		TRY
		{
			# Add the Date/Time
			$RichTextBox.SelectionColor = $DateTimeColor
			$RichTextBox.AppendText("[$SortableTime] ")
			
			
			IF ($PSBoundParameters['ComputerName'])
			{
				# Add ComputerName
				$RichTextBox.SelectionColor = $ComputerNameColor
				$RichTextBox.AppendText(("$ComputerName ").ToUpper())
			}
			
			IF ($PSBoundParameters['Source'])
			{
				# Add Source
				$RichTextBox.SelectionColor = $SourceColor
				$RichTextBox.AppendText("$Source ")
			}
			
			# Add Message with a return character
			$RichTextBox.SelectionColor = $MessageColor
			$RichTextBox.AppendText("$Message`r")
			Write-Verbose -Message "$SortableTime $Message"
		}
		CATCH
		{
			Write-Error -Message "PROCESS - Error while writing inside the RichTextBox"
		}
	}
	END
	{
		# Refresh RichTextBox
		$RichTextBox.Refresh()
		
		# Scroll to the end of the RichTextBox
		$RichTextBox.ScrollToCaret()
	}
}
#endregion

$toolstripstatuslabelLazyWinAdminLink_Click={
	Start-Process -FilePath "http://www.lazywinadmin.com"
}

$buttonCheck_Click = {
	TRY
	{
		#$Error = ""
		
		# Search for this account in the current domain
		$Searcher = [ADSISearcher]"(sAMAccountName=$($textboxComputerName.text))"
		$Results = $Searcher.FindOne()
		
		# Get the current date and time
		$DateFormat = Get-Date -Format "yyyy/MM/dd-HH:mm:ss"
		
		if ($Results -ne $null)
		{
			# Here we check the property "LockOutTime", if it is greater that 0
			# this mean the account is lockedout
			if ($Results.properties.lockouttime -gt 0)
			{
				# Show the information in the ListBox
				#Account locked out
				Add-ListViewItem -Clear -Items $Results -ListView $listview1
			}
			else
			{
				# Show the information in the ListBox
				#Account no lockedout
				Add-ListViewItem -Clear -Items $Results -ListView $listview1
			}
		}
		else
		{
			# Show the information in the ListBox
			#Account not found
			Append-Richtextbox -RichTextBox $richtextbox1 -Message "Account can't be found"
		}
	}
	CATCH
	{
		Append-Richtextbox -RichTextBox $richtextbox1 -Message "$Error.Exception.Message"
	}
}

$textboxComputerName_TextChanged = {
	
	if ($textboxComputerName.Text -ne $textboxComputerName.Tag)
	{
		$buttonCheck.Enabled = $textboxComputerName.text
		$buttonUnlock.Enabled = $textboxComputerName.text
	}
}

$textboxComputerName_Enter={
	if ($textboxComputerName.Text -eq $textboxComputerName.Tag)
	{
		#Clear the text
		$textboxComputerName.Text = ""
		$textboxComputerName.ForeColor = 'WindowText'
	}
}

$textboxComputerName_Leave={
	if ($textboxComputerName.Text -eq "")
	{
		#Display the watermark
		$textboxComputerName.Text = $textboxComputerName.Tag
		$textboxComputerName.ForeColor = 'LightGray'
	}
}

$textboxComputerName_VisibleChanged={
	if ($textboxComputerName.Visible -and $textboxComputerName.Tag -eq $null)
	{
		#Initialize the watermark and save it in the Tag property
		$textboxComputerName.Tag = $textboxComputerName.Text;
		$textboxComputerName.ForeColor = 'LightGray'
		#If we have focus then clear out the text
		if ($textboxComputerName.Focused)
		{
			$textboxComputerName.Text = ""
			$textboxComputerName.ForeColor = 'WindowText'
		}
	}
}
]]></Code>
  <Bookmarks />
  <BreakPoints />
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</Assembly>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>