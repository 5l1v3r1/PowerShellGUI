<File version="2">
  <FileID>f7c89b20-6eb8-46f5-8bd8-2bdd4e97df8f</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAACj3SURBVHhe7d13lJz1fe9xx3HOuf/E5wR8Q5xb
EseOEy4uwRDb2CRx7Bw78o3tFHdTbANumOYgwGCZZtHBINNUUQFUFiGttL3O9tkys7Nttsz2nZ2y
vUpClM/9/Z7VipV2BNogcVf83u9zXmelmXmeZ2aWw+/7zM6s3kVERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERvR01G4g/+4A8S7zv77MQ3v/nN
xCWXXJK49NLLjEsBAMCyNbdW23X7/e9/f+I973lPwq7pRpdd4N+w3/u93xv/oz/6I33pi1/Uj3/8
Ez23Y7cawj3q6EmqvTsOAACWqY6ehNq6BuUrr9LKlTfpn7/0Jb3vfe/Tu9/97sNHlvkTZwaAhF38
V6++T/76DpXUd6k01KOyBgAAcCYoCXWrsSOqRx9boxUrVug97/n96SPL/Ik7++yzE1de+SNV1ber
rLFXPjMAFAc7AQDAGcRnhoCmSFQ33XSzzjnnj998APjG17+eeGbLDnPW3+2d/fvsTgAAwBmntKFH
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
VE1kTPWRHhWWhpRTVK6dGdXKC7Upv7RBRXUh7dyTr50FjeYJi6m4qNDbLs3XooqwGRLaFz8OAMCp
ETBnoHaRsgNAsNUsjGaxPX7RtOzlJWYR3FtQp11ZlUrLqlrEXm6vt4vlifZj2cW8NmwGAHNM+4qx
/QigHQAazRpSZraz2y5kb1/ZNOAtrp2d3Tpw4KB+evUv9bPrbtcNN9+jy69cqQceespbhHftSteq
1U+ak+HhRfux7P7tMcsDET1uBgB7srmnYG4AaDIDgF2svVccjvAGIrON/QSdPXtf/cgzuumX92pg
YNAs/IfNfTngDSObt+zSz264y1v87RBktzl2H3PsAFJn1rX5AaDeDCAn+r4sbQAYHFHInjmbM+lU
AmY4KA+FlfvPn1Dsnl9q6LGHtePCc5X5/Frte+gcDe7/c8X2/ndFX/hv5uvvK3f1u7ThgW+bb5S5
M2bbuf0kzJm7mVgaNuvfP/AJfe22Z/TU9nRt2JWnzCZz5t6QpVXf/7z+1wcv0MfO+3P99Rdv0ANZ
Y2odKtDVF31aF3z0Ap3/uWv0m/0P6V8/fKFW/OD7+tS5f62/PP9zuuS2jfr5f3xaH/+rP9PZH/2m
bt4VUTg24r0ycPxjAQC8dUFzBmoXJrsY1nfYN6RFzWJnP5p2rNr2pFmk9+nGm1frP1fepZt/ec8i
N5rL7fVPbUlXTVsy5X6sqpZBBVqj3hl4Tdug94a6p7flmQXYrFEpbm/vk93majMABIMh9ff369If
XK/1z+dqV7Zfdz64SStvuluvvvqyNm/ertvvfdqc2Y8u2o9l9++9Wb6+S49vzlZj74j2FtZrc5pP
zT1zQ4Nd7O37BLyP1Dce+dpsnoO2hDJLG3XNf96t+x54XBMTY3r58CHl5BbpB1et1FNbzeM2z6l9
Cb/cDC3ex+6PKJ9nLg9GEsqraNba5wq8V8RP9H1ZwgBwqTcANPTYHwMkUgp2DauiIazdKy5S9/VX
aeDHP9S6j/yVsl/Yqt1r/lHbfnO+Nt91gTbe/gmtv/1CPXHLx5S24UbVNJs7bLad209S9eYO17Zs
07/9zz/Vn3z4fH38wk/pwi9drgdKerR19Tf0N+d+Ww/UvqZoX5Vu+eqndPH3n9T+/mpd88kP6CPf
XK/cyITqAo/rc3/4J/rIdzaqoqtZG677pP7wj/9O1+wZ01Bbuq78zKf0mZ8+o7zkATV1Ln4sAIC3
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
OKT4yMzJDQDf+973Rgfio0qOHvCmBgAAcGaKj8wqMTylH/zgh4eOLPMn7qtf/WrXFVdcOW3ZiQEA
AJyZrrjCuPKq6a997WuJI8s8ERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREREREREREREREREREREREREZ2y3vWu/wfbqUKkAaW4aQAAAABJRU5ErkJggg==</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="form1" children="Controls">
    <Property name="ClientSize">522, 261</Property>
    <Property name="Name">form1</Property>
    <Property name="Text">Form</Property>
    <Event name="Load">form1_Load</Event>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textbox1" children="Controls">
      <Property name="Location">103, 234</Property>
      <Property name="Name">textbox1</Property>
      <Property name="Size">407, 20</Property>
      <Property name="TabIndex">2</Property>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonAddColumn" children="Controls">
      <Property name="Location">12, 232</Property>
      <Property name="Name">buttonAddColumn</Property>
      <Property name="Size">85, 23</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">Add Column</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonAddColumn_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridview1" children="Controls">
      <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
      <Property name="Location">12, 12</Property>
      <Property name="Name">datagridview1</Property>
      <Property name="Size">498, 214</Property>
      <Property name="TabIndex">0</Property>
    </Object>
  </Object>
  <Code><![CDATA[
$form1_Load = {
}



#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The ComboBox control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the ComboBox's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		$Item,
		[Parameter(Mandatory = $false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView])
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}
#endregion

function Add-DataGridViewColumn
{
<#
.SYNOPSIS
	This function add a column to a DataGridView
.DESCRIPTION
	This function add a column to a DataGridView
.EXAMPLE
	Add-DataGridViewColumn -DataGridView $datagridview1 -ColumnName $($textbox1.Text -split "," -replace '^\s+', '' -replace '\s+$', '')
.EXAMPLE
	Add-DataGridViewColumn -DataGridView $datagridview1 -ColumnName "First Name","Last Name","SamAccountName","Description"
.NOTES
	Francois-Xavier Cat
	www.lazywinadmin.com
	@lazywinadm
#>
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[String[]]$ColumnName
	)
	
	foreach ($Column in $ColumnName)
	{
		
		# Create Column object
		$NewColumn = New-Object -TypeName System.Windows.Forms.DataGridViewTextBoxColumn
		$NewColumn.Name = $Column
		$NewColumn.HeaderText = $Column
		
		# Add the Column to the Datagridview
		$DataGridView.Columns.Add($NewColumn)
	}
}


$buttonAddColumn_Click = {
	if ($textbox1.Text)
	{
		# Add the a new column (separated by a comma), additionally it will remove white spaces at the beginning and end
		Add-DataGridViewColumn -DataGridView $datagridview1 -ColumnName $($textbox1.Text -split "," -replace '^\s+', '' -replace '\s+$', '')
	}
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</Assembly>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>