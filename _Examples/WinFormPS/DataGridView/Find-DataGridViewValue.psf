<File version="2">
  <FileID>9896c257-b0da-42c8-929c-dd798f0bf2a9</FileID>
  <Preview>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
ws1gqM+XaNsiHa/6gN4Je6+fZVsuO4c/3D9P7jNF9eEJOVUvHgDUTBGyULVgIiLSN9XZqbeG1d3h
102tV63/4bbI6DvWwHSvQ922NGqXn3FbYmRbIhtty5NUH56Y+1MCgMwUoRb8BLVAIiLSo9KfEbfF
sEfb8VR/LdRnul44ACTmVssCSrXU1Vh8ZikSs0UWERER/eykT1Z985P9terDk/KqXyAADDR7ZgBQ
/84rKNb+A4OSEiIiIvq5lUmfrPpmQ312QwDo37//3x4AcmUlaoXFxURERPRzK5U+WfXNDABEREQ6
wgBARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQ29sACgrK0NlZSUR
ERE9J9V3GupTDXkjA0BJSQlyc3ORkpKCxMREJCUlERER0TOovlL1marvVH2oob71SW9kAHjw4AHW
rFmDP/zhD/jTn/6EP/7xj0RERPQMqq9UfebGjRu1PtRQ3/qkNzIAqJo8eTI+/fRT7N+/H9bW1kRE
RPQM+/btw0cffYSZM2dqfaihvvVJb2wAmDJlCtq0aQMXFxc4ODgQERHRMzg7O6NFixaYNWuW1oca
6luf9MYGgKlTp6JVq1a4fv06zp49S0RERM9w7do1fPPNN7C0tNT6UEN965MYAIiIiN5yDABEREQ6
xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQERE
pEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABE
REQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQA
QEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRD
DABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwARERE
OsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBE
RKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwA
REREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrE
AEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESk
QwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERE
RDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABA
RESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMM
AERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6
xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQERE
pEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABE
REQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQA
QEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRD
DABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwARERE
OsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBE
RKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwA
REREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrE
AEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESk
QwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERE
RDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABA
RESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMM
AERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6
xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQERE
pEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABE
REQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQA
QEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRD
DABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwARERE
OsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBE
RKRDDABEREQ6xABARESkQwwAREREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwA
REREOsQAQEREpEMMAERERDrEAEBERKRDDABEREQ6xABARESkQwwAREREOvSLDAA3btyAnZ0dERER
PYMaLP9iAsCUKVPQunVrODs74+LFi0RERPQMt2/fxrfffotZs2ZpfaihvvVJb2wAUCnmV7/6Fd5/
/328++67RERE9Ayqr/y7v/s7zJ8/X+tDDfWtT3ojA0B5eTlCQkJw5swZHD16FMeOHSMiIqJnUH2l
6jNDQ0O1PtRQ3/qkNzIAFBUVobq6WksxLBaLxWKxnq+qqqq0PtRQ3/qkNzIAEBER0avFAEBERKRD
DABERKQ76n3yioqKX5TS0lKDr/VZ3tgAUCYvpLLS8Iukn1dJSYnBfUZE9KZT16/CwkL4+fnBxcUF
rq6uvxhJSUnP/QFA5Y0MAOXlZUhITIKrmye9QVxcPeDp5YucnJxnJs2ysjIJbpUGgwO9Xg37wdB+
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</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formWinFormPSFindDataGri" children="Controls">
    <Property name="ClientSize">475, 373</Property>
    <Property name="Name">formWinFormPSFindDataGri</Property>
    <Property name="Text">WinFormPS - Find-DataGridViewValue</Property>
    <Event name="Load">formWinFormPSFindDataGri_Load</Event>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSelectColumns" children="Controls">
      <Property name="Enabled">False</Property>
      <Property name="Location">224, 345</Property>
      <Property name="Name">buttonSelectColumns</Property>
      <Property name="Size">100, 23</Property>
      <Property name="TabIndex">6</Property>
      <Property name="Text">Select Column(s)</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSelectColumns_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSelectRows" children="Controls">
      <Property name="Location">224, 316</Property>
      <Property name="Name">buttonSelectRows</Property>
      <Property name="Size">100, 23</Property>
      <Property name="TabIndex">5</Property>
      <Property name="Text">Select Row(s)</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSelectRows_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonColor" children="Controls">
      <Property name="Location">118, 345</Property>
      <Property name="Name">buttonColor</Property>
      <Property name="Size">100, 23</Property>
      <Property name="TabIndex">4</Property>
      <Property name="Text">Color</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonColor_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonReset" children="Controls">
      <Property name="Location">409, 314</Property>
      <Property name="Name">buttonReset</Property>
      <Property name="Size">54, 23</Property>
      <Property name="TabIndex">3</Property>
      <Property name="Text">Reset</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonReset_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonSelectCells" children="Controls">
      <Property name="Location">118, 316</Property>
      <Property name="Name">buttonSelectCells</Property>
      <Property name="Size">100, 23</Property>
      <Property name="TabIndex">2</Property>
      <Property name="Text">Select Cell(s)</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonSelectCells_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="textbox1" children="Controls">
      <Property name="Location">12, 316</Property>
      <Property name="Name">textbox1</Property>
      <Property name="Size">100, 20</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">chrome</Property>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridview1" children="Controls">
      <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
      <Property name="Location">12, 12</Property>
      <Property name="Name">datagridview1</Property>
      <Property name="RowHeadersVisible">False</Property>
      <Property name="Size">451, 298</Property>
      <Property name="TabIndex">0</Property>
    </Object>
  </Object>
  <Code><![CDATA[

function OnApplicationLoad {
	#Note: This function is not called in Projects
	#Note: This function runs before the form is created
	#Note: To get the script directory in the Packager use: Split-Path $hostinvocation.MyCommand.path
	#Note: To get the console output in the Packager (Windows Mode) use: $ConsoleOutput (Type: System.Collections.ArrayList)
	#Important: Form controls cannot be accessed in this function
	#TODO: Add modules and custom code to validate the application load
	
	return $true #return true for success or false for failure
}


function OnApplicationExit {
	#Note: This function is not called in Projects
	#Note: This function runs after the form is closed
	#TODO: Add custom code to clean up and unload modules when the application exits
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

$formWinFormPSFindDataGri_Load={
	#TODO: Initialize Form Controls here
	$Processes = Get-Process | Select-Object -Property Name,'path', fileversion
	$global:ProcessesDT = ConvertTo-DataTable -InputObject $Processes -RetainColumns
	#$ProcessesDT = $Processes | Out-DataTable
	
	Load-DataGridView -DataGridView $datagridview1 -Item $ProcessesDT
}
function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($Table -eq $null)
	{
		$Table = New-Object System.Data.DataTable
	}

	if($InputObject-is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	else
	{
		if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()

			if($InputObject -eq $null){ return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach($item in $InputObject)
			{
				if($item -ne $null)
				{
					$object = $item
					break	
				}
			}

			if($object -eq $null) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if($prop.Value -ne $null)
					{
						try{ $type = $prop.Value.GetType() } catch {}
					}

					if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
		      			[void]$table.Columns.Add($prop.Name, $type) 
					}
					else #Type info not found
					{ 
						[void]$table.Columns.Add($prop.Name) 	
					}
				}
		    }
			
			if($object -is [System.Data.DataRow])
			{
				foreach($item in $InputObject)
				{	
					$Table.Rows.Add($item)
				}
				return  @(,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()	
		}
		
		foreach($item in $InputObject)
		{		
			$row = $table.NewRow()
			
			if($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}

	return @(,$Table)
}


#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The ComboBox control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the ComboBox's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{	
			$array.Add($Item)	
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}

function Set-DataGridViewFilter
{
	PARAM (
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[Parameter(Mandatory = $true)]
		[System.Data.DataTable]$DataTable,
		[Parameter(Mandatory = $true)]
		[String]$Filter,
		
		[Parameter(Mandatory = $true, ParameterSetName = "OneColumn")]
		[String]$ColumnName,
		[Parameter(Mandatory = $true, ParameterSetName = "AllColumns")]
		[Switch]$AllColumns
	)
	PROCESS
	{
		IF ($PSBoundParameters['AllColumns'])
		{
			FOREACH ($Column in $DataTable.Columns)
			{
				$RowFilter += "{0} Like '%{1}%' OR " -f $($Column.ColumnName), $Filter
			}
			
			# Remove the last 'OR'
			$RowFilter = $RowFilter -replace " OR $", ''
		}
		IF ($PSBoundParameters['ColumnName'])
		{
			$RowFilter = "$ColumnName LIKE '%$Filter%'"
		}
		
		$DataTable.defaultview.rowfilter = $RowFilter
		Load-DataGridView -DataGridView $DataGridView -Item $DataTable
	}
	END { Remove-Variable -Name $RowFilter -ErrorAction 'SilentlyContinue' | Out-Null }
}

function Find-DataGridViewValue
{
	[CmdletBinding(DefaultParameterSetName="Cell")]
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		$Value,
		[Parameter(ParameterSetName="Cell")]
		[Switch]$SelectCell,
		
		[Parameter(ParameterSetName = "Row")]
		[Switch]$SelectRow,
		
		#[Parameter(ParameterSetName = "Column")]
		#[Switch]$SelectColumn,
		[Parameter(ParameterSetName = "RowColor")]
		[system.Drawing.Color]$RowForeColor,
		[Parameter(ParameterSetName = "RowColor")]
		[system.Drawing.Color]$RowBackColor
	)
	
	PROCESS
	{
		$DataGridView.ClearSelection()
		
		FOR ([int]$i = 0; $i -lt $DataGridView.RowCount; $i++)
		{
			FOR ([int] $j = 0; $j -lt $DataGridView.ColumnCount; $j++)
			{
				$CurrentCell = $dataGridView.Rows[$i].Cells[$j]
				
				if ((-not $CurrentCell.Value.Equals([DBNull]::Value)) -and ($CurrentCell.Value.ToString() -like "*$Value*"))
				{
					
					
					# Row Selection
					IF ($PSBoundParameters['SelectRow'])
					{
						$dataGridView.Rows[$i].Selected = $true
					}
					
					<#
					# Column Selection
					IF ($PSBoundParameters['SelectColumn'])
					{
						#$DataGridView.Columns[$($CurrentCell.ColumnIndex)].Selected = $true
						#$DataGridView.Columns[$j].Selected = $true
						#$CurrentCell.DataGridView.Columns[$j].Selected = $true
					}
					#>
					
					# Row Fore Color
					IF ($PSBoundParameters['RowForeColor'])
					{
						$dataGridView.Rows[$i].DefaultCellStyle.ForeColor = $RowForeColor
					}
					# Row Back Color
					IF ($PSBoundParameters['RowBackColor'])
					{
						$dataGridView.Rows[$i].DefaultCellStyle.BackColor =  $RowBackColor
					}
					
					# Cell Selection
					ELSEIF (-not ($PSBoundParameters['SelectRow']) -and -not ($PSBoundParameters['SelectColumn']))
					{
						$CurrentCell.Selected = $true
					}
				}#IF not empty and contains value
			}#For Each column
		}#For Each Row
	}#PROCESS
}#Find-DataGridViewValue

#endregion

$buttonSelectCells_Click= {
	# Select Cell (by default)
	Find-DataGridViewValue -DataGridView $datagridview1 -Value $textbox1.Text
}

$buttonColor_Click={
	#Color Row
	Find-DataGridViewValue -DataGridView $datagridview1 -Value $textbox1.Text -RowForeColor 'Red' -RowBackColor 'Black'
}

$buttonSelectRows_Click={
	# Select Row
	Find-DataGridViewValue -DataGridView $datagridview1 -Value $textbox1.Text -SelectRow
}

$buttonSelectColumns_Click={
	# Select Column = DOES NOT WORK
	Find-DataGridViewValue -DataGridView $datagridview1 -Value $textbox1.Text -SelectColumn	
}

$buttonReset_Click = {
	$formWinFormPSFindDataGri_Load.invoke()
}]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</Assembly>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>