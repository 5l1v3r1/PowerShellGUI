<File version="2.1">
  <FileID>093d49ab-31c3-46dd-ae0a-10eb7543f37a</FileID>
  <LastExport>131142371356190704</LastExport>
  <Preview>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
hAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZ
AIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAiIidh
ALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYA
IiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgA
bG1mACAiIidhALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCI
iJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBb
mxkAiIjISRgAbG1mACAiIidhALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIi
J2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZm
BgAiInISBgBbmxkAiIjISRgAbG1mACAiIidhALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJ
GABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkB
gIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAiIidhALC1mQGAiIichAHA1mYGACIichIG
AFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAg
IiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAiIidhALC1mQGAiIichAHA
1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiI
yEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAiIidhALC1
mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJy
EgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1m
ACAiIidhALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyE
AcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkA
iIjISRgAbG1mACAiIidhALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EA
sLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAi
InISBgBbmxkAiIjISRgAbG1mACAiIidhALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABs
bWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiI
nIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAiIidhALC1mQGAiIichAHA1mYGACIichIGAFub
GQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiIn
YQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAiIidhALC1mQGAiIichAHA1mYG
ACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYAW5sZAIiIyEkY
AGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAiIidhALC1mQGA
iIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDWZgYAIiJyEgYA
W5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjISRgAbG1mACAi
IidhALC1mQGAiIichAHA1mYGACIichIGAFubGQCIiMhJGABsbWYAICIiJ2EAsLWZAYCIiJyEAcDW
ZgYAIiJyEgYAW5sZAIiIyEkYAGxtZgAgIiInYQCwtZkBgIiInIQBwNZmBgAiInISBgBbmxkAiIjI
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
YpCSkoLU1FQ6heg2jY2NNX+3trYyABARHYMjAsD0tMxLQoCeJm5ubjYjRrfbTacY33ZtaGgwb/DU
7a787RNERE7niADgz+Ev5KFTib9tTURE7+SoAKCjQX0p4ODBg+aaTj2+batnfPztA0RE5OXYMwBE
REROxgBARETkQAwAREREDsQAQERE5EAMAERERA7EAEBERORADABEREQOxABARETkQAwAREREDsQA
QERE5EAMAERERA7EAEBERORADABEREQOxABARETkQAwAREREDsQAQERE5EAMAERERA70gQ0Au6em
cWDfXuyXBmojiYiIaP5ojd0jQaDvgxQAOiQAjO6eNg2bknSiCYWIiIjmj9bYiam96PkgBACzINE2
tA/dI/vQOzZtTk0QERHRPJMaq8W/XWquv3rs8zcLAD56v5mOiIiI/mr81eDZdBoGACIiolOMvxo8
m07zNw0ARERE9P5jACAiInIgBgAiIiIHYgAgIiJyIAYAIiIiB5q3ADAgAaCxfx8aNQQQERHRB5rW
7M7R1zD5bgNASmom9hz4M8YPwMyoU9KEJgoiIiL64NKaPTD1Nva/CdR4mrFy5V0nEQCuvmYqIzMP
b/wZeAMwpxGIiIhoYdj/lhRvuTS2dOKuVXfjRz/64YkFgMsvv+KtwF0hqJXkUN/YZk4hEBER0cKg
I//G5g4kp2Vh6bI78bOfnRFoS/yxL4sWXXrwtttux8q7VuEuoa8fEBER0cKgp/3vuutuLF26DFdd
dTXOO++87bbEH/ty0UUXvPDrc87ZfPrpp2/+0Y9+JNdERES0YEjt1tP+Z5111uYLLrhg86JFi66z
JZ4XXnjhhRdeeOGFF1544YUXXnjhhRdeeOGFF1544YUXXnjhhRdeeOGFF1544YUXXnhZ+JcPfej/
B16LsS8xW1JHAAAAAElFTkSuQmCC</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="formLazyWinAdmincom" children="Controls">
    <Property name="AutoScaleDimensions">6, 13</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">284, 261</Property>
    <Property name="Name">formLazyWinAdmincom</Property>
    <Property name="Text">LazyWinAdmin.com</Property>
    <Event name="Load">formLazyWinAdmincom_Load</Event>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="button1" children="Controls">
      <Property name="Location">12, 226</Property>
      <Property name="Name">button1</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">1</Property>
      <Property name="Text">button1</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">button1_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridview1" children="Controls">
      <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
      <Property name="Location">12, 12</Property>
      <Property name="Name">datagridview1</Property>
      <Property name="Size">240, 208</Property>
      <Property name="TabIndex">0</Property>
    </Object>
  </Object>
  <Code><![CDATA[
$formLazyWinAdmincom_Load={
	#TODO: Initialize Form Controls here
	
}

#region Control Helper Functions
function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}

function Add-WFDataGridViewColumn
{
<#
.SYNOPSIS
	This function add a column to a DataGridView
.DESCRIPTION
	This function add a column to a DataGridView
.EXAMPLE
	Add-WFDataGridViewColumn -DataGridView $datagridview1 -ColumnName $($textbox1.Text -split "," -replace '^\s+', '' -replace '\s+$', '')
.EXAMPLE
	Add-WFDataGridViewColumn -DataGridView $datagridview1 -ColumnName "First Name","Last Name","SamAccountName","Description"
.NOTES
	Francois-Xavier Cat
	www.lazywinadmin.com
	@lazywinadm
	github.com/lazywinadmin
#>
	[CmdletBinding()]
	PARAM (
		[ValidateNotNull()]
		[Parameter(Mandatory = $true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[String[]]$ColumnName
	)
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		foreach ($Column in $ColumnName)
		{
			
		# Create Column object
		$NewColumn = New-Object -TypeName System.Windows.Forms.DataGridViewTextBoxColumn
		$NewColumn.Name = $Column
		$NewColumn.HeaderText = $Column
		
		# Add the Column to the Datagridview
		$DataGridView.Columns.Add($NewColumn)
		}
	}
}

function Add-WFDataGridViewRow
{
<#
	.SYNOPSIS
		This function add a row to a DataGridView
	
	.DESCRIPTION
		This function add a row to a DataGridView
	
	.PARAMETER DataGridView
		Specifies the DataGridView Control to use
	
	.PARAMETER Title
		Specifies the Title to set on the new row
	
	.PARAMETER Values
		Specities the values to add
	
	.PARAMETER Collection
		Specifies the number of column to add
	
	.EXAMPLE
		Add-WFDataGridViewRow -DataGridView $datagridview1 -Title "Name1" -Values ($textbox1.Text -split ",")
	
		Add a new row with the Title 'Name1' and the values from $textbox1
		
	.EXAMPLE
		Add-WFDataGridViewRow -DataGridView $datagridview1
	
		Add an empty row
	
	.EXAMPLE
		Add-WFDataGridViewRow -DataGridView $datagridview1 -Collection 3
	
		Add 3 empty rows
	
	.EXAMPLE
		Add-WFDataGridViewRow -DataGridView $datagridview1 -Values "Francois-Xavier","Cat","fxcat"
	
		Add a row with the values specified.
	
	.NOTES
		Francois-Xavier Cat
		www.lazywinadmin.com
		@lazywinadm
		github.com/lazywinadmin
#>
	
	[CmdletBinding(DefaultParameterSetName = 'EmptyRow')]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[Parameter(ParameterSetName = 'Row',
				   Mandatory = $true)]
		[String]$Title,
		[Parameter(ParameterSetName = 'Row')]
		[Array]$Values,
		[Parameter(ParameterSetName = 'Collection',
				   Mandatory = $true)]
		[int32]$Collection
	)
	
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		IF ($PSCmdlet.ParameterSetName -eq 'EmptyRow')
		{
			$DataGridView.Rows.Add()
		}
		ELSEIF ($PSCmdlet.ParameterSetName -eq 'Row')
		{
			$Row = New-Object -TypeName System.Windows.Forms.DataGridViewRow
			$Row.HeaderCell.Value = $Title
			$Row.CreateCells($DataGridView, $Values)
			
			# Add the row
			$DataGridView.Rows.Add($Row)
			
		}
		ELSEIF ($PSCmdlet.ParameterSetName -eq 'Collection')
		{
			$DataGridView.Rows.Add($Collection)
		}
	}
}

function Set-WFDataGridView
{
<#
	.SYNOPSIS
		This function helps you edit the datagridview control
	
	.DESCRIPTION
		This function helps you edit the datagridview control
	
	.PARAMETER DataGridView
		Specifies the DataGridView Control
	
	.PARAMETER AlternativeRowColor
		Specifies the color of the alternative row color
	
	.PARAMETER DefaultRowColor
		Specifies the color of the default row color
	
	.PARAMETER ForeColor
		Specifies the color of the text
	
	.PARAMETER BackColor
		Specifies the background color
	
	.PARAMETER ProperFormat
		Set the datagirdview to the proper format
	
	.PARAMETER FontFamily
		Specifies the the Font family to use
	
	.PARAMETER FontSize
		Specifies the Font size
	
	.PARAMETER HideRowHeader
		Hide the Row Header
	
	.PARAMETER ShowRowHeader
		Show the Row Header

	.PARAMETER HideColumnHeader
		Hide the Column Header
		
	.PARAMETER ShowColumnHeader
		Show the Column Header

	.EXAMPLE
		Set-WFDataGridView -DataGridView $datagridview1 -ProperFormat -FontFamily $listboxFontFamily.Text -FontSize $listboxFontSize.Text
	
	.EXAMPLE
		Set-WFDataGridView -DataGridView $datagridview1 -AlternativeRowColor -BackColor 'AliceBlue' -ForeColor 'Black'
	
	.EXAMPLE
		Set-WFDataGridView -DataGridView $datagridviewOutput -DefaultRowColor -BackColor 'Beige' -ForeColor 'Brown'
	
	.EXAMPLE
		Set-DataGridViewRowHeader -DataGridView $datagridview1 -HideRowHeader
	
		This will hide the Row Header

	.EXAMPLE
		Set-DataGridViewRowHeader -DataGridView $datagridview1 -ShowRowHeader

		This will show the Row Header

	.EXAMPLE
		Set-DataGridViewRowHeader -DataGridView $datagridview1 -HideColumnHeader
	
		This will hide the Column Header

	.EXAMPLE
		Set-DataGridViewRowHeader -DataGridView $datagridview1 -ShowColumnHeader

		This will show the Column Header

	.NOTES
		Author: Francois-Xavier Cat
		Twitter:@LazyWinAdm
		www.lazywinadmin.com
		github.com/lazywinadmin
#>
	
	[CmdletBinding(DefaultParameterSetName = 'ShowRowHeader',
				   SupportsShouldProcess = $true)]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[Parameter(ParameterSetName = 'AlternativeRowColor',
				   Mandatory = $true)]
		[Switch]$AlternativeRowColor,
		[Parameter(ParameterSetName = 'DefaultRowColor')]
		[Switch]$DefaultRowColor,
		[Parameter(ParameterSetName = 'AlternativeRowColor',
				   Mandatory = $true)]
		[Parameter(ParameterSetName = 'DefaultRowColor')]
		[System.Drawing.Color]$ForeColor,
		[Parameter(ParameterSetName = 'AlternativeRowColor',
				   Mandatory = $true)]
		[Parameter(ParameterSetName = 'DefaultRowColor')]
		[System.Drawing.Color]$BackColor,
		[Parameter(ParameterSetName = 'Proper',
				   Mandatory = $true)]
		[Switch]$ProperFormat,
		[Parameter(ParameterSetName = 'Proper')]
		[String]$FontFamily = "Consolas",
		[Parameter(ParameterSetName = 'Proper')]
		[Int]$FontSize = 10,
		[Parameter(ParameterSetName = 'HideRowHeader')]
		[Switch]$HideRowHeader,
		[Parameter(ParameterSetName = 'ShowRowHeader')]
		[Switch]$ShowRowHeader,
		[Parameter(ParameterSetName = 'HideColumnHeader')]
		[Switch]$HideColumnHeader,
		[Parameter(ParameterSetName = 'ShowColumnHeader')]
		[Switch]$ShowColumnHeader
		
	)
	
	BEGIN
	{
		Add-Type -AssemblyName System.Windows.Forms
	}
	PROCESS
	{
		if ($psboundparameters['AlternativeRowColor'])
		{
			IF ($PSCmdlet.ShouldProcess($DataGridView, "Set the Alternative row color. ForeColor: $ForeColor, BackColor: $BackColor"))
			{
				$DataGridView.AlternatingRowsDefaultCellStyle.ForeColor = $ForeColor
				$DataGridView.AlternatingRowsDefaultCellStyle.BackColor = $BackColor
			}
		}
		
		if ($psboundparameters['DefaultRowColor'])
		{
			IF ($PSCmdlet.ShouldProcess($DataGridView, "Set the Default row color. ForeColor: $ForeColor, BackColor: $BackColor"))
			{
				$DataGridView.RowsDefaultCellStyle.ForeColor = $ForeColor
				$DataGridView.RowsDefaultCellStyle.BackColor = $BackColor
			}
		}
		
		if ($psboundparameters['ProperFormat'])
		{
			IF ($PSCmdlet.ShouldProcess($DataGridView, "Set the Border Header Style to 'Raised', Border Style to 'Fixed3D', Selection Mode to 'FullRowSelected', Disable resizable row, Set the font to $FontFamily with a the size $FontSize"))
			{
				#$Font = New-Object -TypeName System.Drawing.Font -ArgumentList "Segoi UI", 10
				$Font = New-Object -TypeName System.Drawing.Font -ArgumentList $FontFamily, $FontSize
				
				#[System.Drawing.FontStyle]::Bold
				
				$DataGridView.ColumnHeadersBorderStyle = 'Raised'
				$DataGridView.BorderStyle = 'Fixed3D'
				$DataGridView.SelectionMode = 'FullRowSelect'
				$DataGridView.AllowUserToResizeRows = $false
				$datagridview.DefaultCellStyle.font = $Font
			}
		}
		
		if ($psboundparameters['HideRowHeader'])
		{
			IF ($PSCmdlet.ShouldProcess($DataGridView, "Hide the Row Header"))
			{
				$DataGridView.RowHeadersVisible = $false
			}
		}
		if ($psboundparameters['ShowRowHeader'])
		{
			IF ($PSCmdlet.ShouldProcess($DataGridView, "Show the Row Header"))
			{
				$DataGridView.RowHeadersVisible = $true
			}
		}
		if ($psboundparameters['HideColumnHeader'])
		{
			IF ($PSCmdlet.ShouldProcess($DataGridView, "Hide the Column Header"))
			{
				$DataGridView.ColumnHeadersVisible = $false
			}
		}
		if ($psboundparameters['ShowColumnHeader'])
		{
			IF ($PSCmdlet.ShouldProcess($DataGridView, "Show the Column Header"))
			{
				$DataGridView.ColumnHeadersVisible = $true
			}
		}
	}
}
#endregion


$button1_Click = {
	
	# Add Column
	Add-WFDataGridViewColumn -DataGridView $datagridview1 -ColumnName "First Column"

	# Add Row and Row Header
	Add-WFDataGridViewRow -DataGridView $datagridview1 -Title "Header1" -Values "Value1"
	Add-WFDataGridViewRow -DataGridView $datagridview1 -Title "Header2" -Values "Value2"
	Add-WFDataGridViewRow -DataGridView $datagridview1 -Title "Header3" -Values "Value3"

	# Set the Row Header to Visible
	Set-WFDataGridView -DataGridView $datagridview1 -ShowRowHeader

	# Set the Column Header to Invisible
	Set-WFDataGridView -DataGridView $datagridview1 -HideColumnHeader
}]]></Code>
  <Mode>0</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>